{"version":3,"sources":["Components/Nav/Nav.module.css","Components/Users/Users.module.css","Components/Profile/MyPosts/NewPost/NewPost.module.css","Components/common/FormsControls.module.css","Components/Dialogs/Message/Message.module.css","Components/Users/User/User.module.css","Components/Nav/Nav.tsx","Components/Dialogs/Dialog/Dialog.tsx","Components/Dialogs/Message/Message.tsx","redux/dialogsReducer.ts","Components/Dialogs/NewMessage/NewMessage.tsx","hoc/withAuthRedirect.tsx","Components/Dialogs/Dialogs.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","api/api.ts","redux/usersReducer.ts","Components/Users/User/User.tsx","Components/Users/User/Users.tsx","Components/common/Preloader.tsx","Components/Users/UsersContainer.tsx","Components/Profile/UserProfile/UserProfile.tsx","redux/profileReducer.ts","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/NewPost/NewPost.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","redux/authReducer.ts","Components/Header/HeaderContainer.tsx","utils/validators.ts","Components/common/FormsControls.tsx","Components/Login/Login.tsx","redux/appReducer.ts","App.tsx","reportWebVitals.ts","redux/navReducer.ts","redux/reduxStore.ts","index.tsx","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Dialogs/NewMessage/NewMessage.module.css","Components/Profile/UserProfile/UserProfile.module.css","Components/Login/Login.module.css"],"names":["module","exports","connect","state","friends","nav","friendsRender","map","fr","className","s","friend","to","id","activeClassName","active","ava","item","name","cont","Dialog","React","memo","props","dialog","Message","message","split","x","i","arr","length","isU","userID","messRight","messLeft","messageR","messageL","initialState","dialogsProps","messageProps","userId","TextareaForm","reduxForm","form","Field","autoFocus","text","placeholder","onKeyPress","e","key","shiftKey","currentTarget","value","trim","reset","preventDefault","handleSubmit","component","dispatch","addMessage","type","addMessageAC","container","onSubmit","MapStateToProps","isAuth","auth","withAuthRedirect","Component","rest","compose","dialogs","dialogMap","messageMap","find","y","undefined","dialogsItems","messages","allMassages","News","Music","Settings","instance","axios","create","baseURL","withCredentials","headers","UsersAPI","pageSize","page","get","then","response","data","post","delete","ProfileAPI","status","put","AuthAPI","loginData","users","photos","small","large","followed","address","city","country","currentPage","totalNumber","numberOfPages","isFetching","buttonsDisabled","setUsers","changePage","setTotalNumber","setIsFetching","toggleButtonDisabled","User","avaContainer","user","width","src","alt","disabled","some","onClick","unfollow","follow","location","Users","numbersOfPages","push","Span","activePage","pages","us","Preloader","UsersContainer","getUsers","this","totalCount","Math","ceil","items","it","UserProfile","userProfile","isHisProfile","restProps","useState","editMode","setEditMode","setStatus","useEffect","fullName","onChange","event","onBlur","changeStatus","onDoubleClick","lookingForAJob","lookingForAJobDescription","aboutMe","Object","entries","contacts","href","postsArray","v1","amountOfLikes","facebook","website","vk","twitter","instagram","youtube","github","mainLink","userStatus","setUserProfileStatusAC","Post","useDispatch","deletePost","useCallback","postText","preText","likes","NewPostTextarea","rows","addPost","addPostAC","newPost","MyPosts","posts","useSelector","Profile","putUserProfileStatus","ProfileContainer","match","params","userid","setUserProfile","setUserProfileStatus","prevProps","loggedUserId","Number","connector","resultCode","withRouter","Header","header","login","hyper","logout","email","setAuthAC","payload","setAuth","HeaderContainer","required","FormsInput","meta","input","touched","error","errorSpan","LoginReduxForm","validate","Login","formData","stopSubmit","_error","initialized","App","app","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newMessage","filter","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa816f26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__KLcjy\",\"item\":\"Nav_item__h-c_b\",\"active\":\"Nav_active__1pnnN\",\"ava\":\"Nav_ava__Su_OF\",\"cont\":\"Nav_cont__2a-80\",\"friend\":\"Nav_friend__3czZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Users_activePage__3R2yP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"NewPost_text__l3BZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorSpan\":\"FormsControls_errorSpan__ZJ4uI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messLeft\":\"Message_messLeft__1y7TS\",\"messRight\":\"Message_messRight__1S6Tq\",\"message\":\"Message_message__1Lbml\",\"messageR\":\"Message_messageR__1XRt2\",\"messageL\":\"Message_messageL__3S_aj\",\"ava\":\"Message_ava__19Qum\",\"name\":\"Message_name__1bC4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"User_container__2ENrL\",\"data\":\"User_data__1r4zK\",\"name\":\"User_name__1xSq6\",\"status\":\"User_status__1_kw1\",\"location\":\"User_location__3mlod\",\"ava\":\"User_ava__2Rd3o\",\"avaContainer\":\"User_avaContainer__3I2s8\"};","import React from \"react\";\r\nimport s from \"./Nav.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsDataType} from \"../../types/entities\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStateToPropsType = {\r\n    friends: Array<DialogsDataType>\r\n}\r\n\r\nfunction Nav({friends}: MapStateToPropsType) {\r\n    const friendsRender = friends.map(fr => {\r\n        return (\r\n            <div key={fr.id} className={s.friend}>\r\n\r\n                <NavLink to={`/dialogs/${fr.id}`} activeClassName={s.active}>\r\n                    <div className={s.ava}/>\r\n                </NavLink>\r\n                <div className={s.item}><NavLink to={`/dialogs/${fr.id}`} activeClassName={s.active}>{fr.name}</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to={`/profile`} activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to={\"/users\"} activeClassName={s.active}>Users</NavLink></div>\r\n            <div className={s.item}><NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink></div>\r\n            <div className={s.item}><NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink></div>\r\n            <div className={s.item}><NavLink to={\"/settings\"} activeClassName={s.active}>Settings</NavLink></div>\r\n            <div className={s.cont}>\r\n                {friendsRender}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType):MapStateToPropsType => ({friends: state.nav.friends})\r\n\r\nexport default connect(mapStateToProps,{})(Nav)","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {DialogsDataType} from \"../../../types/entities\";\r\nimport s from \"./Dialog.module.css\";\r\n\r\nexport const Dialog = React.memo((props: DialogsDataType) => (\r\n    <div className={s.dialog}>\r\n        <NavLink to={`/dialogs/${props.id}`} activeClassName={s.active}>\r\n            {props.name}\r\n        </NavLink>\r\n    </div>\r\n));","import s from \"./Message.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    message: string\r\n    name: string\r\n    userID: number\r\n}\r\n\r\nexport const Message = React.memo((props: PropsType) => {\r\n    const message = props.message.split('\\n').map(\r\n        (x, i, arr) => arr.length !== i + 1 ? <>{x}<br/></> : x\r\n    )\r\n    const isU = props.userID === 5\r\n    return (\r\n        <div className={isU ? s.messRight : s.messLeft}>\r\n            <div>\r\n                <div className={s.ava}/>\r\n                <div className={s.name}>{props.name}</div>\r\n            </div>\r\n            <div key={props.id} className={`${s.message} ${isU ? s.messageR : s.messageL}`}>{message}</div>\r\n        </div>\r\n    )\r\n});","import {DialogsActionsType, DialogsPropsType} from \"../types/entities\";\r\n\r\nconst initialState: DialogsPropsType = {\r\n    dialogsProps: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Den\"},\r\n        {id: 3, name: \"Alex\"},\r\n        {id: 4, name: \"Margo\"},\r\n        {id: 5, name: \"Anton\"},\r\n        {id: 6, name: \"John\"}\r\n    ],\r\n    messageProps: [\r\n        {id: 1, message: \"Hi!\", userId: 5},\r\n        {id: 2, message: \"How are you?\", userId: 5},\r\n        {id: 3, message: \"How is your typeScript?\", userId: 5},\r\n        {id: 4, message: \"Hi! It's good\", userId: 3}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPropsType = initialState, action: DialogsActionsType) => {\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            const newMessage = {\r\n                id: state.messageProps.length,\r\n                message: action.text,\r\n                userId: 5\r\n            }\r\n            state.messageProps = [...state.messageProps, newMessage]\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addMessageAC = (text: string) => {\r\n    return {\r\n        type: \"ADD-MESSAGE\",\r\n        text: text\r\n    } as const\r\n}","import React, {KeyboardEvent} from \"react\";\r\nimport s from \"./NewMessage.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessageAC} from \"../../../redux/dialogsReducer\";\r\nimport {ActionsTypes} from \"../../../types/entities\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (text: string) => void\r\n}\r\n\r\nconst TextareaForm = reduxForm<{message: string},MapDispatchToPropsType>({form:'messageText'})((props) => {\r\n    const onEnterText = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.key === \"Enter\" && !e.shiftKey && e.currentTarget.value.trim() !== \"\") {\r\n            props.handleSubmit(e)\r\n            props.reset()\r\n            e.preventDefault()\r\n        } else if (e.key === \"Enter\" && !e.shiftKey) {\r\n            props.reset()\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    return <Field autoFocus className={s.text} placeholder={\"Enter your message\"}\r\n        onKeyPress={onEnterText} name={\"message\"} component={\"textarea\"}/>\r\n})\r\n\r\nconst NewMessage: React.FC<MapDispatchToPropsType> = ({addMessage}) => {\r\n    const onSubmit = ({message}: {message: string}) => {\r\n        addMessage(message)\r\n    }\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <TextareaForm\r\n                addMessage={addMessage}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionsTypes>) => ({\r\n    addMessage: (text: string) => dispatch(addMessageAC(text))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(NewMessage)","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {StateType} from \"../redux/reduxStore\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst MapStateToProps = (state: StateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n    const Container:React.FC<MapStateToPropsType> = (props) => {\r\n        const {isAuth, ...rest} = props\r\n        if(!isAuth)\r\n            return <Redirect to={\"/login\"}/>\r\n        else return <Component {...rest as T}/>\r\n    }\r\n    return connect<MapStateToPropsType,{},T,StateType>(MapStateToProps,{})(Container)\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {Dialog} from \"./Dialog/Dialog\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"../../types/entities\";\r\nimport NewMessage from \"./NewMessage/NewMessage\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateToPropsType = { state: DialogsPropsType }\r\n\r\nconst Dialogs: React.FC<MapStateToPropsType> = ({state}) => {\r\n    const dialogMap = state.dialogsProps.map(x => {\r\n        return <Dialog key={x.id} id={x.id} name={x.name}/>\r\n    })\r\n    const messageMap = state.messageProps.map(x => {\r\n        const name = state.dialogsProps.find(y => y.id === x.userId)\r\n        if (name !== undefined)\r\n            return (\r\n                <Message key={x.id} id={x.id} name={name.name} message={x.message} userID={x.userId}/>)\r\n        else return {}\r\n    })\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogMap}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.allMassages}>{messageMap}</div>\r\n                <NewMessage/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => ({state: state.dialogs})\r\n\r\nexport default compose<any>(\r\n    connect(mapStateToProps, {}),\r\n    withAuthRedirect\r\n)(Dialogs)","import React from \"react\";\r\n\r\n// import s from \"./News.module.css\"\r\n\r\nexport function News() {\r\n    return <>\r\n        We all gonna die\r\n    </>\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return <>\r\n        <h4>Music</h4>\r\n    </>\r\n}","import React from \"react\";\r\n\r\n// import s from \"./Settings.module.css\"\r\n\r\nexport function Settings() {\r\n    return <>\r\n        Settings\r\n    </>\r\n}","import axios from \"axios\";\r\nimport {AuthLoginType, ProfileUserType} from \"../types/entities\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"568bef24-ce98-482a-a370-1dd23b640991\"\r\n    }\r\n})\r\n\r\ntype GetUsersType = {\r\n    \"items\": Array<{\r\n        \"name\": string\r\n        \"id\": number\r\n        \"photos\": {\r\n            \"small\": string | null\r\n            \"large\": string | null\r\n        },\r\n        \"status\": string\r\n        \"followed\": boolean\r\n    }>\r\n\r\n    \"totalCount\": number\r\n    \"error\": null\r\n}\r\n\r\ntype AuthGetType = {\r\n    data: {\r\n        \"id\": number\r\n        \"login\": string\r\n        \"email\": string\r\n    }\r\n    \"messages\":string[]\r\n    \"resultCode\":number\r\n}\r\ntype SimplestResponseType = {\r\n    data: {}\r\n    \"messages\":string[]\r\n    \"resultCode\":number\r\n}\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers: (pageSize: number, page: number) => instance.get<GetUsersType>(\r\n            `users?count=${pageSize}&page=${page}`\r\n        ).then(response => response.data),\r\n    follow: (id: number) => instance.post(`follow/${id}`),\r\n    unfollow: (id: number) => instance.delete(`follow/${id}`)\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile: (userId: string) => instance.get<ProfileUserType>(`profile/` + userId).then(response => response.data),\r\n    getStatus: (userId: string) => instance.get<string>(`profile/status/` + userId),\r\n    putStatus: (status: string) => instance.put<SimplestResponseType>(`profile/status/`, {status: status})\r\n}\r\n\r\nexport const AuthAPI = {\r\n    getAuth: () => instance.get<AuthGetType>(`auth/me`).then(response => response.data),\r\n    login: (loginData: AuthLoginType) => instance\r\n        .post<SimplestResponseType>(`auth/login`, loginData),//.then(response => response.data)\r\n    logout: () => instance.delete(`auth/login`)\r\n}","import {ActionsTypes, UsersPropsType, UserType} from \"../types/entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {StateType} from \"./reduxStore\";\r\nimport {UsersAPI} from \"../api/api\";\r\n\r\nconst initialState: UsersPropsType = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            name: \"\",\r\n            photos: {\r\n                small: \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\",\r\n                large: null\r\n            },\r\n            status: \"\",\r\n            followed: false,\r\n            address: {\r\n                city: \"\",\r\n                country: \"\"\r\n            }\r\n        }\r\n    ],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    totalNumber: 1,\r\n    numberOfPages: 1,\r\n    isFetching: false,\r\n    buttonsDisabled: []\r\n}\r\n\r\nexport type UsersActionsType = ReturnType<typeof followAC>\r\n    | ReturnType<typeof unfollowAC>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof changePage>\r\n    | ReturnType<typeof setTotalNumber>\r\n    | ReturnType<typeof setNumberOfPages>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof toggleButtonDisabled>\r\n\r\nexport const usersReducer = (state: UsersPropsType = initialState, action: UsersActionsType): UsersPropsType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {...state, users: state.users.map(us => us.id === action.userId ? {...us, followed: true} : us)}\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {...state, users: state.users.map(us => us.id === action.userId ? {...us, followed: false} : us)}\r\n        }\r\n        case \"SET_USERS\": {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case \"CHANGE_PAGE\": {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case \"SET_TOTAL_NUMBER\": {\r\n            return {...state, totalNumber: action.totalNumber}\r\n        }\r\n        case \"SET_NUMBER_OF_PAGES\": {\r\n            return {...state, numberOfPages: action.numberOfPages}\r\n        }\r\n        case \"SET_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"TOGGLE_BUTTON_DISABLED\": {\r\n            if (state.buttonsDisabled.some(id => id === action.id))\r\n                return {\r\n                    ...state,\r\n                    buttonsDisabled: state.buttonsDisabled.filter(id => id !== action.id)\r\n                }\r\n            else return {...state, buttonsDisabled: [...state.buttonsDisabled, action.id]}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (id: number) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userId: id\r\n    } as const\r\n}\r\nexport const unfollowAC = (id: number) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userId: id\r\n    } as const\r\n}\r\nexport const setUsers = (users: UserType[]) => {\r\n    return {\r\n        type: \"SET_USERS\",\r\n        users: users\r\n    } as const\r\n}\r\nexport const changePage = (page: number) => {\r\n    return {\r\n        type: \"CHANGE_PAGE\",\r\n        page: page\r\n    } as const\r\n}\r\nexport const setTotalNumber = (totalNumber: number) => {\r\n    return {\r\n        type: \"SET_TOTAL_NUMBER\",\r\n        totalNumber: totalNumber\r\n    } as const\r\n}\r\nexport const setNumberOfPages = (numberOfPages: number) => {\r\n    return {\r\n        type: \"SET_NUMBER_OF_PAGES\",\r\n        numberOfPages\r\n    } as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"SET_IS_FETCHING\",\r\n        isFetching: isFetching\r\n    } as const\r\n}\r\nexport const toggleButtonDisabled = (id: number) => {\r\n    return {\r\n        type: \"TOGGLE_BUTTON_DISABLED\",\r\n        id\r\n    } as const\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, StateType, unknown, ActionsTypes>;\r\ntype ThunkDispatchType = ThunkDispatch<StateType, unknown, ActionsTypes>;\r\nexport const getUsers = (page: number, pageSize: number): ThunkType => (dispatch: ThunkDispatchType) => {\r\n    dispatch(changePage(page))\r\n    dispatch(setIsFetching(true))\r\n    UsersAPI.getUsers(pageSize, page).then(data => {\r\n        dispatch(setIsFetching(false))\r\n        dispatch(setTotalNumber(data.totalCount))\r\n        dispatch(setNumberOfPages(Math.ceil(data.totalCount / pageSize)))\r\n        dispatch(setUsers(data.items.map(it => ({\r\n            id: it.id,\r\n            name: it.name,\r\n            status: it.status,\r\n            photos: {\r\n                small: it.photos.small ? it.photos.small : \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\",\r\n                large: it.photos.large\r\n            },\r\n            followed: it.followed,\r\n            address: {country: \"Belarus\"}\r\n        }))))\r\n    })\r\n}\r\nexport const follow = (userId: number): ThunkType => (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleButtonDisabled(userId))\r\n    UsersAPI.follow(userId).then(response => {\r\n        dispatch(toggleButtonDisabled(userId))\r\n        if (response.status === 200)\r\n            dispatch(followAC(userId))\r\n    })\r\n}\r\nexport const unfollow = (userId: number): ThunkType => (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleButtonDisabled(userId))\r\n    UsersAPI.unfollow(userId).then(response => {\r\n        dispatch(toggleButtonDisabled(userId))\r\n        if (response.status === 200)\r\n            dispatch(unfollowAC(userId))\r\n    })\r\n}","import {UserType} from \"../../../types/entities\";\r\nimport React from \"react\";\r\nimport s from \"./User.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    buttonsDisabled: number[]\r\n}\r\n\r\nexport function User(props: PropsType) {\r\n    const buttonFollowHandler = () => {\r\n        if (props.user.followed) props.unfollow(props.user.id)\r\n        else props.follow(props.user.id)\r\n    }\r\n    return <div className={s.container}>\r\n        <div className={s.avaContainer}>\r\n            <NavLink to={\"/profile/\" + props.user.id}>\r\n                <img className={s.ava} width={\"65px\"} src={props.user.photos.small} alt={\"ava\"}/>\r\n            </NavLink>\r\n            <button\r\n                disabled={props.buttonsDisabled.some(id => id === props.user.id)}\r\n                onClick={buttonFollowHandler}\r\n            >\r\n                {props.user.followed ? \"unfollow\" : \"follow\"}\r\n            </button>\r\n        </div>\r\n        <div className={s.data}>\r\n            <div className={s.name}>{props.user.name}</div>\r\n            <div className={s.status}>{props.user.status}</div>\r\n            <div className={s.location}>\r\n                <div>{props.user.address.country},</div>\r\n                <div>{props.user.address.city}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import s from \"../Users.module.css\";\r\nimport {User} from \"./User\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../../types/entities\";\r\n\r\ntype PropsType = {\r\n    numberOfPages: number\r\n    currentPage: number\r\n    changePage: (page: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    users: UserType[]\r\n    buttonsDisabled: number[]\r\n}\r\n\r\nexport const Users = (props: PropsType) => {\r\n    const numbersOfPages: number[] = []\r\n    for (let i = props.currentPage - 4; i <= props.currentPage + 4 && i < props.numberOfPages; i++) {\r\n        if (i < 2)\r\n            i = 2\r\n        numbersOfPages.push(i)\r\n    }\r\n    const Span = ({value}: { value: number}) => <span\r\n        className={value === props.currentPage ? s.activePage : \"\"}\r\n        onClick={() => {\r\n            props.changePage(value)\r\n        }}>{value} </span>\r\n\r\n    const pages = <div>\r\n        <Span value={1}/> {numbersOfPages[0] !== 2 ? \"... \" : \"\"}{numbersOfPages.map((value, i) =>\r\n        <Span key={i} value={value} />)}\r\n        {numbersOfPages[numbersOfPages.length - 1] !== props.numberOfPages - 1 ? \" ... \" : \"\"}\r\n        <Span value={props.numberOfPages}/>\r\n    </div>;\r\n    return <>\r\n        {pages}\r\n        {props.users.map(us => <User key={us.id} user={us} follow={props.follow}\r\n                                     unfollow={props.unfollow} buttonsDisabled={props.buttonsDisabled}/>)}\r\n        {pages}\r\n    </>\r\n}","import React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"} alt={\"loading\"}/>\r\n}","import React from \"react\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {UsersPropsType, UserType} from \"../../types/entities\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changePage, follow, getUsers,\r\n    setIsFetching,\r\n    setTotalNumber,\r\n    setUsers, unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport {Users} from \"./User/Users\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateToPropsType = UsersPropsType & { isAuth: boolean }\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: UserType[]) => void\r\n    changePage: (newPage: number) => void\r\n    setTotalNumber: (totalNumber: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n    getUsers: (page: number, pageSize: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<MapStateToPropsType & MapDispatchToPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.changePage(1)\r\n    }\r\n\r\n    changePage = (page: number) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isFetching)\r\n            return <Preloader/>\r\n        else\r\n            return <Users\r\n                users={this.props.users}\r\n                numberOfPages={this.props.numberOfPages}\r\n                currentPage={this.props.currentPage}\r\n                changePage={this.changePage}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                buttonsDisabled={this.props.buttonsDisabled}\r\n            />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => ({\r\n    ...state.users,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<any>(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, StateType>(mapStateToProps, {\r\n    follow, unfollow, setUsers, changePage, setTotalNumber, setIsFetching, getUsers}),\r\n    withAuthRedirect)(UsersContainer)","import s from \"./UserProfile.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ProfileUserType} from \"../../../types/entities\";\r\n\r\ntype PropsType = {\r\n    userProfile: ProfileUserType,\r\n    status: string,\r\n    isHisProfile: boolean,\r\n    changeStatus: (status:string) => void\r\n}\r\n\r\nexport function UserProfile({userProfile, isHisProfile, ...restProps}: PropsType) {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(()=>restProps.status)\r\n    useEffect(()=>{setStatus(restProps.status)},[restProps.status])\r\n    const onBlurZhdun = () => {\r\n        setEditMode(false)\r\n        restProps.changeStatus(status)\r\n    }\r\n\r\n    return <div className={s.user}>\r\n        <img\r\n            src={userProfile.photos.large ? userProfile.photos.large : \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\"}\r\n            className={s.ava} alt={\"\"}/>\r\n        <div>\r\n            <b>{userProfile.fullName}</b>\r\n            <p>Status: {isHisProfile ?(\r\n                editMode ?\r\n                    <input\r\n                        onChange={event => setStatus(event.currentTarget.value)}\r\n                        autoFocus onBlur={onBlurZhdun} value={status}/> :\r\n                    <span onDoubleClick={() => setEditMode(true)}>{restProps.status || \"enter status with help of double click, pls\"}</span>) :\r\n                `${restProps.status}`}\r\n            </p>\r\n            {userProfile.lookingForAJob && <p>looking for a job: {userProfile.lookingForAJobDescription}</p>}\r\n            <p>{userProfile.aboutMe}</p>\r\n            <div>\r\n                <h5>Contacts</h5>\r\n                {Object.entries(userProfile.contacts).map(((value) => {\r\n                    return value[1] && <p>{value[0]}: <a href={value[1]}>{value[1]}</a></p>\r\n                }))}\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}","import {ActionsTypes, ProfilePropsType, ProfileUserType} from \"../types/entities\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {StateType} from \"./reduxStore\";\r\nimport {ProfileAPI} from \"../api/api\";\r\nimport {v1} from \"uuid\";\r\n\r\nconst initialState: ProfilePropsType = {\r\n    postsArray: [\r\n        {\r\n            id: v1(),\r\n            ava: \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\",\r\n            text: \"Hey! How are you?\",\r\n            amountOfLikes: 26\r\n        },\r\n        {\r\n            id: v1(),\r\n            ava: \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\",\r\n            text: \"It's my first post.\",\r\n            amountOfLikes: 14\r\n        }\r\n    ],\r\n    userProfile: {\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: null,\r\n        fullName: \"\",\r\n        userId: -1,\r\n        photos: {\r\n            small: \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\",\r\n            large: \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\"\r\n        }\r\n    },\r\n    userStatus: \"\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof deletePostAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof setUserProfileStatusAC>\r\n\r\nexport const profileReducer = (state: ProfilePropsType = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            const newPost = {\r\n                id: v1(),\r\n                text: action.text,\r\n                ava: \"https://upload.wikimedia.org/wikipedia/commons/2/21/Solid_black.svg\",\r\n                amountOfLikes: 0\r\n            }\r\n            return {...state, postsArray: [newPost, ...state.postsArray]}\r\n        }\r\n        case \"DELETE-POST\": {\r\n            return {...state, postsArray: state.postsArray.filter(post => post.id !== action.id)}\r\n        }\r\n        case \"SET_USER_PROFILE\": {\r\n            if (action.user)\r\n                return {\r\n                    ...state,\r\n                    userProfile: {\r\n                        ...action.user,\r\n                        contacts: {...action.user.contacts},\r\n                        photos: {...action.user.photos}\r\n                    }\r\n                }\r\n            else return state\r\n        }\r\n        case \"SET_USER_PROFILE_STATUS\": {\r\n            return {...state, userStatus: action.status}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (text: string) => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        text: text\r\n    } as const\r\n}\r\nexport const deletePostAC = (id: string) => {\r\n    return {\r\n        type: \"DELETE-POST\",\r\n        id\r\n    } as const\r\n}\r\n// export const changeNewPostAC = (text: string) => {\r\n//     return {\r\n//         type: \"CHANGE-NEW-POST\",\r\n//         text: text\r\n//     } as const\r\n// }\r\nexport const setUserProfileAC = (user: ProfileUserType) => {\r\n    return {\r\n        type: \"SET_USER_PROFILE\",\r\n        user\r\n    } as const\r\n}\r\nexport const setUserProfileStatusAC = (status: string) => {\r\n    return {\r\n        type: \"SET_USER_PROFILE_STATUS\",\r\n        status\r\n    } as const\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, StateType, unknown, ActionsTypes>;\r\n// type ThunkDispatchType = ThunkDispatch<StateType, unknown, ActionsTypes>;\r\nexport const setUserProfile = (userId: string): ThunkType => (dispatch) => {\r\n    ProfileAPI.getProfile(userId)\r\n        .then(data => {\r\n            dispatch(setUserProfileAC({\r\n                    ...data,\r\n                    photos: {\r\n                        small: data.photos.small,\r\n                        large: data.photos.large\r\n                    }\r\n                })\r\n            )\r\n        })\r\n}\r\nexport const setUserProfileStatus = (userId: string): ThunkType => (dispatch) => {\r\n    ProfileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfileStatusAC(response.data)\r\n            )\r\n        })\r\n}\r\nexport const putUserProfileStatus = (status: string): ThunkType => (dispatch) => {\r\n    ProfileAPI.putStatus(status)\r\n        .then(response => {\r\n            if(response.data.resultCode === 0)\r\n            dispatch(setUserProfileStatusAC(status))\r\n        })\r\n}","import React, {useCallback} from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../types/entities\";\r\nimport {deletePostAC} from \"../../../../redux/profileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = PostType & {}\r\n\r\nexport const Post = React.memo((props: PropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const deletePost = useCallback(() => dispatch(deletePostAC(props.id)),[props.id, dispatch])\r\n    return (\r\n        <div className={s.container}>\r\n            <img src={props.ava} className={s.ava} alt={\"\"}/>\r\n            <div className={s.postText}>\r\n                <pre className={s.preText}>{props.text}</pre>\r\n                <button onClick={deletePost} className={s.delete}>x</button>\r\n            </div>\r\n            <p className={s.likes}>Like {props.amountOfLikes}</p>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport s from \"./NewPost.module.css\"\r\nimport {addPostAC} from \"../../../../redux/profileReducer\";\r\nimport {ActionsTypes} from \"../../../../types/entities\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\n\r\nconst NewPostTextarea = reduxForm<{newPost: string}>({form: 'newPost'})((props) => {\r\n    return <form onSubmit={(e)=>{props.handleSubmit(e); props.reset()}}>\r\n        <div>\r\n            <Field name={\"newPost\"}\r\n                   placeholder={\"Enter new post\"}\r\n                   component={\"textarea\"} rows={5} className={s.text}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n})\r\n\r\nfunction NewPost({addPost}: MapDispatchToPropsType) {\r\n    const onSubmit = ({newPost}: {newPost: string}) => {\r\n        addPost(newPost)\r\n    }\r\n    return (\r\n        <div>\r\n            <NewPostTextarea onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = (dispatch: (action: ActionsTypes) => void): MapDispatchToPropsType => ({\r\n    addPost: (text: string) => dispatch(addPostAC(text))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost)","import React from \"react\";\r\nimport {Post} from \"./Post/Post\";\r\nimport NewPost from \"./NewPost/NewPost\";\r\nimport {PostType} from \"../../../types/entities\";\r\nimport {StateType} from \"../../../redux/reduxStore\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst MyPosts: React.FC = () => {\r\n    const posts = useSelector<StateType, Array<PostType>>(state => state.posts.postsArray)\r\n    const postDataMap = (x: PostType): JSX.Element => {\r\n        return (\r\n            <Post key={x.id} text={x.text} ava={x.ava} amountOfLikes={x.amountOfLikes} id={x.id}/>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h4>My posts</h4>\r\n            <NewPost/>\r\n            {posts.map(postDataMap)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {UserProfile} from \"./UserProfile/UserProfile\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport {ProfileUserType} from \"../../types/entities\";\r\n\r\ntype PropsType = {\r\n    userProfile: ProfileUserType,\r\n    userStatus: string,\r\n    isHisProfile: boolean\r\n    putUserProfileStatus: (status:string) => void\r\n}\r\n\r\nexport const Profile = (props: PropsType) => (\r\n    <div>\r\n        <div>\r\n            <img width={\"100%\"} src={\"http://www.cashadvance6online.com/data/archive/img/751556980.png\"} alt={\"\"}/>\r\n        </div>\r\n        <UserProfile\r\n            userProfile={props.userProfile}\r\n            status={props.userStatus}\r\n            isHisProfile={props.isHisProfile}\r\n            changeStatus={props.putUserProfileStatus}\r\n        />\r\n        <MyPosts/>\r\n    </div>\r\n);","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {putUserProfileStatus, setUserProfile, setUserProfileStatus} from \"../../redux/profileReducer\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {Preloader} from \"../common/Preloader\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType & RouteComponentProps<{ userid?: string }>> {\r\n    componentDidMount() {\r\n        const userId = this.props.match.params.userid\r\n        if(userId) {\r\n            this.props.setUserProfile(userId)\r\n            this.props.setUserProfileStatus(userId)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<PropsType & RouteComponentProps<{ userid?: string }>>) {\r\n        if(prevProps.match.params.userid!==this.props.match.params.userid){\r\n            const userId = this.props.match.params.userid\r\n            if(userId) {\r\n                this.props.setUserProfile(userId)\r\n                this.props.setUserProfileStatus(userId)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.match.params.userid && this.props.isAuth){\r\n            return <Redirect to={\"/profile/\" + this.props.loggedUserId}/>\r\n        }\r\n        else if(!this.props.match.params.userid){\r\n            return <Redirect to={\"/login\"}/>\r\n        }\r\n        if (this.props.userProfile.userId === Number(this.props.match.params.userid))\r\n            return (\r\n                <Profile\r\n                    userProfile={this.props.userProfile}\r\n                    userStatus={this.props.userStatus}\r\n                    isHisProfile={this.props.userProfile.userId === this.props.loggedUserId}\r\n                    putUserProfileStatus={this.props.putUserProfileStatus}\r\n                />\r\n            )\r\n        else\r\n            return <Preloader/>\r\n    }\r\n}\r\n\r\nconst MapStateToProps = ({posts,auth}: StateType) => ({\r\n    userProfile: {...posts.userProfile},\r\n    loggedUserId: auth.id,\r\n    isAuth: auth.isAuth,\r\n    userStatus: posts.userStatus\r\n})\r\nconst connector = connect(MapStateToProps, {setUserProfile, setUserProfileStatus, putUserProfileStatus})\r\ntype PropsType = ConnectedProps<typeof connector>\r\n\r\nexport default connector(withRouter(ProfileContainer))\r\n\r\n/*\r\n//@ts-ignore\r\nconst connect = (mstp, mdtp) => {\r\n    //@ts-ignore\r\n    return (Component) => {\r\n        return <Context.consumer>\r\n            <Component {...mstp(store.getState())} {...mdtp(store.dispatch)}/>\r\n        </Context.consumer>\r\n    }\r\n}*/\r\n","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    email: null | string\r\n    login: string\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nexport const Header = React.memo((props: PropsType) => (\r\n    <header className={s.header}>\r\n        <h5>Here has to be logo</h5>\r\n        {\r\n            props.isAuth ? <span className={s.login}>\r\n                        <NavLink to={`/profile/${props.id}`} className={s.hyper} activeClassName={s.active}>\r\n                            {props.login}\r\n                        </NavLink> <button onClick={props.logout}>logout</button>\r\n                    {/*<NavLink onClick={props.logout} to={`/login`} className={s.hyper} activeClassName={s.active}>\r\n                            logout\r\n                        </NavLink>*/}\r\n                </span>\r\n                : <NavLink to={`/login`} className={s.hyper} activeClassName={s.active}>login</NavLink>\r\n        }\r\n    </header>\r\n));","import {ActionsTypes, AuthActionsType, AuthLoginType, AuthPropsType} from \"../types/entities\";\r\nimport {AuthAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {StateType} from \"./reduxStore\"\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\n\r\nconst initialState: AuthPropsType = {\r\n    id: -1,\r\n    email: null,\r\n    login: \"\",\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: AuthPropsType = initialState, action: AuthActionsType): AuthPropsType => {\r\n    switch (action.type) {\r\n        case \"SET_AUTH\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthAC = (id: number, email: string, login: string, isAuth: boolean) => {\r\n    return {\r\n        type: \"SET_AUTH\",\r\n        payload: {id, email, login, isAuth}\r\n    } as const\r\n}\r\n\r\ntype ThunkType<T = void> = ThunkAction<T, StateType, unknown, ActionsTypes | FormAction>;\r\nexport const setAuth = (): ThunkType<Promise<void>> => (dispatch) => {\r\n    return AuthAPI.getAuth().then(data => {\r\n        if (data.resultCode === 0)\r\n            dispatch(setAuthAC(data.data.id, data.data.email, data.data.login, true))\r\n        else\r\n            dispatch(setAuthAC(-1, \"\", \"\", false))\r\n    })\r\n}\r\nexport const login = (loginData: AuthLoginType): ThunkType => (dispatch) => {\r\n    AuthAPI.login(loginData).then(response => {\r\n        if(response.data.resultCode === 0)\r\n            dispatch(setAuth())\r\n        else\r\n            dispatch(stopSubmit(\"login\", {_error: response.data.messages[0]}))\r\n    })\r\n}\r\nexport const logout = (): ThunkType => (dispatch) => {\r\n    AuthAPI.logout().then(response => {\r\n        if(response.data.resultCode === 0)\r\n            dispatch(setAuth())\r\n    })\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AuthPropsType} from \"../../types/entities\";\r\n\r\ntype MapStateToPropsType = AuthPropsType\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\n\r\nclass HeaderContainer extends React.Component<MapStateToPropsType & MapDispatchToPropsType>{\r\n    // componentDidMount() {\r\n    //         this.props.setAuth()\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Header login={this.props.login} logout={this.props.logout}\r\n                    email={this.props.email} id={this.props.id}\r\n                    isAuth={this.props.isAuth}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: StateType): MapStateToPropsType => ({...state.auth})\r\n\r\n\r\nexport default connect(MapStateToProps,{logout})(HeaderContainer)","export const required = (value: string) => value ? undefined : 'Field is required'","import React, {InputHTMLAttributes} from \"react\";\r\nimport {WrappedFieldProps} from \"redux-form/lib/Field\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\nexport const FormsInput = ({meta, input, ...restProps}: WrappedFieldProps & InputHTMLAttributes<HTMLInputElement>) => {\r\n    return <>\r\n        <input {...input} {...restProps}/>\r\n        {meta.touched && meta.error && <span className={s.errorSpan}>{meta.error} </span>}\r\n    </>\r\n}","import React from \"react\"\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {AuthLoginType} from \"../../types/entities\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {FormsInput} from \"../common/FormsControls\";\r\nimport s from \"./Login.module.css\";\r\n\r\n\r\nfunction LoginForm(props: InjectedFormProps<AuthLoginType>) {\r\n    return <form onSubmit={props.handleSubmit} className={s.form}>\r\n        {props.error && <div className={s.error}>{props.error}</div>}\r\n        <Field\r\n            placeholder={\"email\"} name={\"email\"}\r\n            validate={[required]} component={FormsInput}/>\r\n        <Field\r\n            placeholder={\"password\"} name={\"password\"}\r\n            validate={[required]} component={FormsInput} type={\"password\"}/>\r\n        <label><Field name={\"rememberMe\"} type={\"checkbox\"} component={\"input\"}/>remember me</label>\r\n        <button>login</button>\r\n    </form>;\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<AuthLoginType>({form: \"login\"})(LoginForm)\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<StateType, boolean>(state => state.auth.isAuth)\r\n    const userId = useSelector<StateType, number>(state => state.auth.id)\r\n    const onSubmit = (formData: AuthLoginType) => {\r\n        dispatch(login(formData))\r\n    }\r\n    if (isAuth)\r\n        return <Redirect to={`/profile/${userId}`}/>\r\n    else\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n}\r\n\r\n","import {ActionsTypes, AppStateType} from \"../types/entities\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {StateType} from \"./reduxStore\"\r\nimport {FormAction} from \"redux-form\";\r\nimport {setAuth} from \"./authReducer\";\r\n\r\nconst initialState: AppStateType = {\r\n    initialized: false\r\n}\r\nexport type AppActionType = ReturnType<typeof setInitializedSuccess>\r\n\r\nexport const appReducer = (state = initialState, action: AppActionType): AppStateType => {\r\n    switch (action.type) {\r\n        case \"INITIALIZED\": {\r\n            return {...state, initialized: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setInitializedSuccess = () => {\r\n    return {\r\n        type: \"INITIALIZED\"\r\n    } as const\r\n}\r\ntype ThunkType = ThunkAction<void, StateType, unknown, ActionsTypes | FormAction>;\r\n// type ThunkDispatchType = ThunkDispatch<StateType, unknown, ActionsTypes | FormAction>;\r\n\r\nexport const initialize = (): ThunkType => (dispatch) => {\r\n    dispatch(setAuth())\r\n        .then(()=>dispatch(setInitializedSuccess()))\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Nav from \"./Components/Nav/Nav\";\r\nimport Dialogs from \"./Components/Dialogs/Dialogs\";\r\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\r\nimport {News} from \"./Components/News/News\";\r\nimport {Music} from \"./Components/Music/Music\";\r\nimport {Settings} from \"./Components/Settings/Settings\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport {Login} from './Components/Login/Login';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {StateType} from \"./redux/reduxStore\";\r\nimport {initialize} from \"./redux/appReducer\";\r\nimport {Preloader} from \"./Components/common/Preloader\";\r\n\r\n\r\nfunction App() {\r\n    const isAuth = useSelector<StateType,boolean>(state => state.auth.isAuth)\r\n    const initialized = useSelector<StateType,boolean>(state => state.app.initialized)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{dispatch(initialize())},[dispatch,isAuth])\r\n    if(!initialized){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className={\"container\"}>\r\n                    <Route path={\"/login\"} render={() => <Login/>}/>\r\n                    <Route path={\"/profile/:userid?\"} render={() => <ProfileContainer/>}/>\r\n                    <Route path={\"/Dialogs\"} render={() => <Dialogs/>}/>\r\n                    <Route path={\"/news\"} render={() => <News/>}/>\r\n                    <Route path={\"/music\"} render={() => <Music/>}/>\r\n                    <Route path={\"/settings\"} render={() => <Settings/>}/>\r\n                    <Route path={\"/users\"} render={() => <UsersContainer/>}/>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default (App);\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import {ActionsTypes, NavType} from \"../types/entities\";\r\n\r\nconst initialState: NavType = {\r\n    friends: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Den\"},\r\n        {id: 3, name: \"Alex\"}\r\n    ]\r\n}\r\n\r\nexport const navReducer = (state: NavType = initialState, action: ActionsTypes) => {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {dialogsReducer} from \"./dialogsReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {navReducer} from \"./navReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    dialogs: dialogsReducer,\r\n    posts: profileReducer,\r\n    nav: navReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n//export type StoreType = typeof store\r\n\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./redux/reduxStore\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__3BFMC\",\"ava\":\"Post_ava__KHOpN\",\"likes\":\"Post_likes__1bYx2\",\"postText\":\"Post_postText__3sVaa\",\"preText\":\"Post_preText__2TMWp\",\"delete\":\"Post_delete__gGhUy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2udkD\",\"login\":\"Header_login__1cLby\",\"active\":\"Header_active__3VGkO\",\"hyper\":\"Header_hyper__3ZCMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Th-g\",\"dialogsItems\":\"Dialogs_dialogsItems__2S3mb\",\"messages\":\"Dialogs_messages__nO_xs\",\"allMassages\":\"Dialogs_allMassages__3kl-n\",\"ava\":\"Dialogs_ava__1Wj9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__PoaR0\",\"active\":\"Dialog_active__DMG2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"NewMessage_text__3_eBu\",\"ava\":\"NewMessage_ava__9aNJH\",\"container\":\"NewMessage_container__2_GdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserProfile_user__13tkU\",\"ava\":\"UserProfile_ava__38u_V\",\"cont\":\"UserProfile_cont__2M-eL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2KlEb\",\"error\":\"Login_error__2wydh\"};"],"sourceRoot":""}